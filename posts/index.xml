<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Joseph L. Sanders</title><link>/posts/</link><description>Recent content in Posts on Joseph L. Sanders</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 16 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Migrating from Pinboard to Linkding (Part 1)</title><link>/posts/migrating_to_linkding_part_1/</link><pubDate>Sun, 16 Jul 2023 00:00:00 +0000</pubDate><guid>/posts/migrating_to_linkding_part_1/</guid><description>I recently migrated my bookmarks from Pinboard to Linkding. There were a number of factors that led me to make this move, as well as some cool technical challenges I solved along the way. In part 1 of this series, I&amp;rsquo;ll talk about why I switched &amp;amp; some of the tooling I created to automate the migration.
Reasons for Migrating Link to heading Why Use Linkding? Link to heading Linkding is an open-source, self-hosted bookmark manager with excellent support for Docker deployment.</description></item><item><title>C++ Inherited Properties</title><link>/posts/cpp_properties/</link><pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate><guid>/posts/cpp_properties/</guid><description>Inheritance In Python &amp;amp; JavaScript Link to heading So here&amp;rsquo;s a fun thing that bit me on my C++ learning journey. In my previous experience with Python, it was (relatively) common to set a property (or properties) on a base class, then make use of that property within the methods of that base class.
class Base: def __init__(self): self.some_int = 0 def get_int(self): return self.some_int For derived classes, we could simply override the property.</description></item></channel></rss>