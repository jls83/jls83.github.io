<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joseph L. Sanders</title><link>/</link><description>Recent content on Joseph L. Sanders</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 24 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>/posts/cpp_properties/</link><pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate><guid>/posts/cpp_properties/</guid><description>So here&amp;rsquo;s a fun thing that bit me on my C++ learning journey. In my previous experience with Python, it was (relatively) common to set a property (or properties) on a base class, then make use of that property within the methods of that base class.
class Base: def __init__(self): self.some_int = 0 def get_int(self): return self.some_int For derived classes, we could simply override the property.
class Derived(Base): def __init__(self): self.</description></item><item><title/><link>/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/about/</guid><description>About Me I&amp;rsquo;m a Software Engineer based in the NYC Metro Area (specifically North Bellmore, NY). I am currently employed at Google on the Ads Explanations team. Previously I worked as an Engineering Team Lead at YCharts, a research platform for financial decision makers.
My current primary working languages are C++ and Dart, however I love working in Python most of all. I also have experience with C#, Clojure/ClojureScript, Rust, JavaScript, TypeScript, Go, and Powershell.</description></item><item><title>Projects</title><link>/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/</guid><description> Translatify (backend) - A translation service using Python, Django Rest Framework, and PostgreSQL Translatify (frontend) - A translation frontend using React Roadie - Setlist management for obsessive nerds using Python, Django, and MySQL Reconciliation - Reconciles position data and transactions for (imaginary) financial accounts using Python Crisgo - A basic link shortener service in Go, with configurable storage backends Sarcastify - Turns your text into SpongeBob sarcastic text, without any NPM dependencies</description></item></channel></rss>