<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Joseph L. Sanders</title><link>/</link><description>Recent content on Joseph L. Sanders</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 24 Jul 2024 19:52:56 -0400</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>On Stairs, Voting, And Structures</title><link>/posts/on_stairs_voting_and_structures/</link><pubDate>Wed, 24 Jul 2024 19:52:56 -0400</pubDate><guid>/posts/on_stairs_voting_and_structures/</guid><description>This is a brain dump after reading Voting as Stairs, an Instagram reel &amp;amp; blog post by YK Hong. I&amp;rsquo;m probably going to be editing this and/or taking it down at some point.
I honestly don&amp;rsquo;t love the analogy. Stairs are static (though a stair car can move around), they connect two or more known points, they provide multiple uses above and beyond their top-line purpose; Hong speaks to this in the article (&amp;ldquo;There are many different ways to take the stairs&amp;hellip;&amp;rdquo;), but immediately attempts to draw a parallel to voting (&amp;ldquo;just as there are many different ways to vote&amp;rdquo;).</description></item><item><title>Diane's Braided Bread</title><link>/posts/dianes_braided_bread/</link><pubDate>Wed, 06 Dec 2023 00:00:00 +0000</pubDate><guid>/posts/dianes_braided_bread/</guid><description>My mother-in-law entrusted me with her braided bread recipe during the early parts of the COVID pandemic. I&amp;rsquo;ve since made some minor tweaks to make it stay fresh for longer, including using a yudane.
Ingredients Link to heading Yudane Link to heading 125g all-purpose flour 125g water, boiling Main Dough Link to heading 500g all-purpose flour 170g water, warm (approx. 100 degrees F) 12.5g salt 11.25g active dry yeast 76g butter 62.</description></item><item><title>Migrating from Pinboard to Linkding (Part 2)</title><link>/posts/migrating_to_linkding_part_2/</link><pubDate>Mon, 16 Oct 2023 00:00:00 +0000</pubDate><guid>/posts/migrating_to_linkding_part_2/</guid><description>In part 1 of this series I talked about some reasons why I moved from Pinboard to Linkding, as well as some of the migration steps. In this part I&amp;rsquo;ll talk about some extra requirements I had that necessitated some modifications to the Linkding source code.
Without realizing it, I had come to rely on the creation order of my Pinboard bookmarks as a form of &amp;ldquo;autobiographical&amp;rdquo; indexing. I loved seeing how my interests changed (or didn&amp;rsquo;t!</description></item><item><title>Migrating from Pinboard to Linkding (Part 1)</title><link>/posts/migrating_to_linkding_part_1/</link><pubDate>Sun, 16 Jul 2023 00:00:00 +0000</pubDate><guid>/posts/migrating_to_linkding_part_1/</guid><description>I recently migrated my bookmarks from Pinboard to Linkding. There were a number of factors that led me to make this move, as well as some cool technical challenges I solved along the way. In part 1 of this series, I&amp;rsquo;ll talk about why I switched &amp;amp; some of the tooling I created to automate the migration.
Reasons for Migrating Link to heading Why Use Linkding? Link to heading Linkding is an open-source, self-hosted bookmark manager with excellent support for Docker deployment.</description></item><item><title>C++ Inherited Properties</title><link>/posts/cpp_properties/</link><pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate><guid>/posts/cpp_properties/</guid><description>Inheritance In Python &amp;amp; JavaScript Link to heading So here&amp;rsquo;s a fun thing that bit me on my C++ learning journey. In my previous experience with Python, it was (relatively) common to set a property (or properties) on a base class, then make use of that property within the methods of that base class.
class Base: def __init__(self): self.some_int = 0 def get_int(self): return self.some_int For derived classes, we could simply override the property.</description></item><item><title>About</title><link>/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/about/</guid><description>About Me Link to heading I&amp;rsquo;m a Software Engineer based in the NYC Metro Area (specifically North Bellmore, NY). I am currently employed at Google on the Ads Explanations team. Previously I worked as an Engineering Team Lead at YCharts, a research platform for financial decision makers.
My current primary working languages are C++ and Dart, however I love working in Python most of all. I also have experience with C#, Clojure/ClojureScript, Rust, JavaScript, TypeScript, Go, and Powershell.</description></item><item><title>Projects</title><link>/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/</guid><description> Crisgo - A basic link shortener service in Go, with configurable storage backends Roadie - Setlist management for obsessive nerds using Python, Django, and MySQL Reconciliation - Reconciles position data and transactions for (imaginary) financial accounts using Python Draggr - Draggable Hiccup elements in ClojureScript Rust Trie - A Rust implementation of a weighted trie suitable for use in autocompleters, etc. Translatify (backend) - A translation service using Python, Django Rest Framework, and PostgreSQL Translatify (frontend) - A translation frontend using React Sarcastify - Turns your text into SpongeBob sarcastic text, without any NPM dependencies Advent of Code 2021 - Solutions for Advent of Code 2021</description></item></channel></rss>